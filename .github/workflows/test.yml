name: tests

on:
  push:
    branches: [master, v*]
  pull_request:
    branches: [master, v*]

jobs:
  node:
    name: Node.js
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        node-version: ['lts/-2', 'lts/-1', 'lts/*']

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run docker compose
        run: docker compose up -d

      - name: Run node tests
        run: npm test

      - name: Run esbuild test
        run: npm run test:esbuild

  node-with-transformer:
    name: Node.js /w transformer
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        node-version: ['lts/-2', 'lts/-1', 'lts/*']

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run docker compose
        run: docker compose up -d

      - name: Run node tests with transformer
        run: TEST_TRANSFORMER=1 npm test

  deno:
    name: Deno
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        deno-version: ['1.x.x', '2.0.x', '2.1.x']

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm'

      - name: Use Deno ${{ matrix.deno-version }}
        uses: denoland/setup-deno@v2
        with:
          deno-version: ${{ matrix.deno-version }}

      - name: Install dependencies
        run: npm ci

      - name: Run docker compose
        run: docker compose up -d

      - name: Build
        run: npm run build

      - name: Run deno tests
        run: npm run test:deno

  bun:
    name: Bun
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        bun-version: ['1.1.26']

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Use Bun ${{ matrix.bun-version }}
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ matrix.bun-version }}

      - name: Run docker compose
        run: docker compose up -d

      - name: Run bun tests
        run: npm run test:bun

  browser:
    name: Browser
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install playwright
        run: npx playwright install chromium

      - name: Run browser tests
        run: npm run test:browser

  cloudflare-workers:
    name: Cloudflare Workers
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run docker compose
        run: docker compose up -d

      - name: Run cloudflare workers test
        run: npm run test:cloudflare-workers

  older-typescript-version:
    name: Older TypeScript version
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        versions:
          - typescript: '4.7' # 24.5.2022 https://devblogs.microsoft.com/typescript/announcing-typescript-4-7/
            node: '18.x'
            tsd: '0.22.0'
          - typescript: '4.8' # 25.8.2022 https://devblogs.microsoft.com/typescript/announcing-typescript-4-8/
            node: '18.x'
            tsd: '0.24.1'
          - typescript: '4.9' # 15.11.2022 https://devblogs.microsoft.com/typescript/announcing-typescript-4-9/
            node: '18.x'
            tsd: '0.27.0'
          - typescript: '5.0' # 16.3.2023 https://devblogs.microsoft.com/typescript/announcing-typescript-5-0/
            node: '18.x'
            tsd: '0.28.1'
          - typescript: '5.1' # 1.6.2023 https://devblogs.microsoft.com/typescript/announcing-typescript-5-1/
            node: '20.x'
            tsd: false
          - typescript: '5.2' # 24.8.2023  https://devblogs.microsoft.com/typescript/announcing-typescript-5-2/
            node: '20.x'
            tsd: '0.29.0'
          - typescript: '5.3' # 20.11.2023 https://devblogs.microsoft.com/typescript/announcing-typescript-5-3/
            node: '20.x'
            tsd: '0.30.7'
          - typescript: '5.4' # 6.3.2024 https://devblogs.microsoft.com/typescript/announcing-typescript-5-4/
            node: '20.x'
            tsd: '0.31.2'
          - typescript: '5.5' # 20.6.2024 https://devblogs.microsoft.com/typescript/announcing-typescript-5-5/
            node: '22.x'
            tsd: false
          - typescript: '5.6' # 9.9.2024 https://devblogs.microsoft.com/typescript/announcing-typescript-5-6/
            node: '22.x'
            tsd: false

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js (${{ matrix.versions.node }})
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.versions.node }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run build with newer TypeScript
        run: npm run build

      - name: Run typings tests with older TypeScript
        if: ${{ matrix.versions.tsd != false }}
        run: |
          npm i -D tsd@${{ matrix.versions.tsd }} && npm run test:typings

      - name: Build unit tests with older TypeScript
        run: npm i -D typescript@${{ matrix.versions.typescript }} && npm run test:node:build

  next-typescript-version:
    name: Next TypeScript version
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm'

      - name: Install dependencies
        run: npm ci && npm i -D typescript@next @types/node@latest

      - name: Build with next TypeScript
        run: npm run build && npm run test:node:build

  jsdocs:
    name: JSDocs
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm'

      - name: Use Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: 2.1.x

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Type-check JSDocs code blocks
        run: npm run test:jsdocs
